export function iframePreview(locale?: string): string;
export function componentPreview(code: any): string;
export const pagePreview: "\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <script type=\"module\">\n        let c;\n\n        function update(source) {\n          source.forEach(async (item, i) => {\n            if (item.svelte.error) return\n            const div = document.createElement(\"div\")\n            document.body.appendChild(div)\n            const blob = new Blob([item.svelte], { type: 'text/javascript' });\n            const url = URL.createObjectURL(blob);\n            const { default:App } = await import(url)\n            new App({ target: div })\n          })\n        }\n\n        window.addEventListener('message', ({data}) => {\n          update(data.preview)\n        }, false)\n\t\t  </script>\n    </head>\n    <body id=\"page\">\n    </body>\n    <style>\n        .page {\n          /* height: 100vh;\n          overflow: hidden; */\n        }\n    </style>\n  </html>\n";
export const currentPagePreview: "\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <script type=\"module\">\n        window.addEventListener('message', ({data}) => {\n          document.querySelector('body').innerHTML = data.html\n        }, false)\n\t\t  </script>\n    </head>\n    <body id=\"page\">\n    </body>\n    <style>\n        .page {\n          /* height: 100vh;\n          overflow: hidden; */\n        }\n    </style>\n  </html>\n";
